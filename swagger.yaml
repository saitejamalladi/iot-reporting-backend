swagger: "2.0"

info:
  version: 1.0.0
  title: Madhurams APIs
  description: The Madhuram API document is intended strictly for internal use only.

schemes:
  - http
host: 34.126.111.208:8080
basePath: "/api"

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
  basicAuth:
    type: basic

tags:
  - name: "auth"
    description: "Token generation"
  - name: "user"
    description: "Access to user information"
  - name: "order"
    description: "Everything about meetings"
  - name: "products"
    description: "Everything about products"
  - name: "categories"
    description: "Everything about categories"
  - name: "customer"
    description: "Everything about groups"
  - name: "payment"
    description: "APIS to perform CRUD on payments "
  - name: "terms"
    description: "To get the terms and conditions"

paths:
  /auth/token:
    post:
      security:
        - basicAuth: []
      tags:
        - "auth"
      summary: To generate an auth token.
      description: This API generated the auth token based on client ID, client Secret, user id and app key shared.
      parameters:
        - in: "body"
          name: "body"
          description: "user object that needs to be shared to generate the token."
          required: true
          schema:
            $ref: "#/definitions/Auth"
      responses:
        200:
          description: The generated jwt token.
          schema:
            type: object
            properties:
              is_error:
                type: boolean
              status_code:
                type: integer
              display_msg:
                type: string
              res_data:
                type: object
                properties:
                  token:
                    type: string
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"

  /user/create:
    post:
      security:
        - basicAuth: []
      tags:
        - "user"
      summary: To create the user
      description: This API create the user
      parameters:
        - in: "body"
          name: "body"
          description: "user object that needs to be created"
          required: true
          schema:
            $ref: "#/definitions/CreateUser"
      responses:
        200:
          description: The generated jwt token.
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /categories/create:
    post:
      security:
        - Bearer: []
      tags:
        - "categories"
      summary: To create a category
      description: Create a category
      parameters:
        - in: "body"
          name: "body"
          description: "Category that needs to be created"
          required: true
          schema:
            $ref: "#/definitions/CreateCategoryRequest"
      responses:
        200:
          description: Category created successfully
          schema:
            $ref: "#/definitions/CreateCategoryResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /categories/list:
    get:
      tags:
        - "categories"
      summary: To list the categories
      responses:
        200:
          description: Category List
          schema:
            $ref: "#/definitions/ListCategoryResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /categories/update:
    post:
      security:
        - Bearer: []
      tags:
        - "categories"
      summary: To update the existing category
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/UpdateCategoryRequest"
      responses:
        200:
          description: Category updated successfully
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /categories/{id}:
    get:
      tags:
        - "categories"
      summary: To get a category based on id
      parameters:
        - in: "path"
          name: "id"
          description: "The category_id to be fetched"
          required: true
          type: integer
      responses:
        200:
          description: Category fetched
          schema:
            $ref: "#/definitions/GetCategoryResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
    delete:
      security:
        - Bearer: []
      tags:
        - "categories"
      summary: To delete a category based on id
      parameters:
        - in: "path"
          name: "id"
          description: "The category_id to be fetched"
          required: true
          type: integer
      responses:
        200:
          description: Category removed
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/create:
    post:
      security:
        - Bearer: []
      tags:
        - "products"
      summary: To create a product
      description: Create a product
      parameters:
        - in: "body"
          name: "body"
          description: "Product that needs to be created"
          required: true
          schema:
            $ref: "#/definitions/CreateProductRequest"
      responses:
        200:
          description: Product created successfully
          schema:
            $ref: "#/definitions/CreateProductResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/list:
    get:
      tags:
        - "products"
      summary: To list the products
      responses:
        200:
          description: Products List
          schema:
            $ref: "#/definitions/ListProductResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/search/{item}:
    get:
      tags:
        - "products"
      summary: To search the available products
      parameters:
        - in: "path"
          name: "item"
          description: "The product to be searched"
          required: true
          type: string
      responses:
        200:
          description: Available Products List
          schema:
            $ref: "#/definitions/SearchProductResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/update:
    post:
      security:
        - Bearer: []
      tags:
        - "products"
      summary: To update the existing product
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/UpdateProductRequest"
      responses:
        200:
          description: Category updated successfully
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/{product_id}:
    get:
      tags:
        - "products"
      summary: To get the list of products based on id
      parameters:
        - in: "path"
          name: "product_id"
          description: "The product_id to be fetched"
          required: true
          type: string
      responses:
        200:
          description: Product info
          schema:
            $ref: "#/definitions/GetProductResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
    delete:
      security:
        - Bearer: []
      tags:
        - "products"
      summary: To delete a product based on product_id
      parameters:
        - in: "path"
          name: "product_id"
          description: "The product_id to be deleted"
          required: true
          type: string
      responses:
        200:
          description: Product removed
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/category/add:
    post:
      security:
        - Bearer: []
      tags:
        - "products"
      summary: To tag new category to the existing product
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/AddProductCategoryRequest"
      responses:
        200:
          description: Category tagged
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/category/remove:
    delete:
      security:
        - Bearer: []
      tags:
        - "products"
      summary: To untag a category for a specific product
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/RemoveProductCategoryRequest"
      responses:
        200:
          description: Category removed
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/quantity/add:
    post:
      security:
        - Bearer: []
      tags:
        - "products"
      summary: To add a quantity to an existing product
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/AddProductQuantityRequest"
      responses:
        200:
          description: Quantity added
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/quantity/update:
    post:
      security:
        - Bearer: []
      tags:
        - "products"
      summary: To update the quantity of an existing product
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/UpdateProductQuantityRequest"
      responses:
        200:
          description: Quantity updated
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
  /products/quantity/remove:
    delete:
      security:
        - Bearer: []
      tags:
        - "products"
      summary: To delete a quantity of an existing product
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/RemoveProductQuantityRequest"
      responses:
        200:
          description: Quantity removed
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: Something wrong in the body.
          schema:
            $ref: "#/definitions/GenericResponse"
        401:
          description: Invalid credentials
          schema:
            $ref: "#/definitions/GenericResponse"
definitions:
  GenericResponse:
    type: object
    properties:
      is_error:
        type: boolean
      status_code:
        type: integer
      display_msg:
        type: string
    xml:
      name: "GenericResponse"
  Auth:
    type: object
    required:
      - user_id
      - password
    properties:
      user_id:
        type: string
        example: ajdfhky12o83uwkjhfi
        description: user id of the user.
      password:
        type: string
        example: ajdfhky12o83uwkjhfi
        description:  password of the user.
    xml:
      name: "Auth"
  CreateUser:
    type: object
    required:
      - name
      - email
      - phone_number
      - country_code
      - timezone
      - password
      - confirm_password
    properties:
      name:
        type: string
        example: John Doe
      email:
        type: string
        example: john@jon.com
      phone_number:
        type: number
        example: 9876543210
      country_code:
        type: number
        example: 91
      timezone:
        type: string
        example: Asia/Kolkata
      password:
        type: string
        example: Dream@123123
      confirm_password:
        type: string
        example: Dream@123123
    xml:
      name: "CreateUser"
  CreateCategoryRequest:
    type: object
    properties:
      name:
        type: string
    xml:
      name: "CreateCategoryRequest"
  CreateCategoryResponse:
    type: object
    properties:
      is_error:
        type: boolean
      status_code:
        type: integer
      display_msg:
        type: string
      res_data:
        type: object
        properties:
          id:
            type: integer
    xml:
      name: "CreateCategoryResponse"
  ListCategoryResponse:
    type: object
    properties:
      is_error:
        type: boolean
      status_code:
        type: integer
      display_msg:
        type: string
      res_data:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
    xml:
      name: "ListCategoryResponse"
  GetCategoryResponse:
    type: object
    properties:
      is_error:
        type: boolean
      status_code:
        type: integer
      display_msg:
        type: string
      res_data:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
    xml:
      name: "GetCategoryResponse"
  UpdateCategoryRequest:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
    xml:
      name: "UpdateCategoryRequest"
  CreateProductRequest:
    type: object
    properties:
      name:
        type: string
        example: "Dummy product"
      description:
        type: string
        example: "Description"
      thumbnail_url:
        type: string
        example: "http://34.126.104.103:8080/images/IMG_4977.jpg"
      display_priority:
        type: integer
        example: 3
      product_details:
        type: array
        items:
          type: object
          properties:
            quantity:
              type: integer
              example: 1000
            available_units:
              type: integer
              example: 1
            measuring_units:
              type: string
              example: 'grams'
            listing_price:
              type: number
              example: 1000
            sale_price:
              type: number
              example: 750
            discount:
              type: number
              example: 25.00
      category_ids:
        type: array
        items:
          type: integer
        example: [2, 4, 6]
    xml:
      name: "CreateProductRequest"
  UpdateProductRequest:
    type: object
    properties:
      product_id:
        type: string
      name:
        type: string
        example: "Dummy product upated"
      description:
        type: string
        example: "Dummy Description updated"
      thumbnail_url:
        type: string
        example: "http://34.126.104.103:8080/images/IMG_4977.jpg"
      display_priority:
        type: integer
        example: 4
    xml:
      name: "UpdateProductRequest"
  AddProductCategoryRequest:
    type: object
    properties:
      product_id:
        type: string
      category_id:
        type: integer
    xml:
      name: "AddProductCategoryRequest"
  RemoveProductCategoryRequest:
    type: object
    properties:
      product_id:
        type: string
      category_id:
        type: integer
    xml:
      name: "RemoveProductCategoryRequest"
  AddProductQuantityRequest:
    type: object
    properties:
      product_id:
        type: string
      quantity:
        type: integer
      available_units:
        type: integer
        example: 1
      measuring_units:
        type: string
        example: grams
      listing_price:
        type: number
      sale_price:
        type: number
      discount:
        type: number
        example: 0.00
    xml:
      name: "AddProductQuantityRequest"
  UpdateProductQuantityRequest:
    type: object
    properties:
      product_id:
        type: string
      quantity:
        type: integer
      available_units:
        type: integer
        example: 1
      measuring_units:
        type: string
        example: grams
      listing_price:
        type: number
      sale_price:
        type: number
      discount:
        type: number
        example: 0.00
    xml:
      name: "UpdateProductQuantityRequest"
  RemoveProductQuantityRequest:
    type: object
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    xml:
      name: "RemoveProductQuantityRequest"
  CreateProductResponse:
    type: object
    properties:
      is_error:
        type: boolean
      status_code:
        type: integer
      display_msg:
        type: string
      res_data:
        type: object
        properties:
          product_id:
            type: integer
    xml:
      name: "CreateProductResponse"
  ListProductResponse:
    type: object
    properties:
      is_error:
        type: boolean
      status_code:
        type: integer
      display_msg:
        type: string
      res_data:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              example: "Dummy product"
            description:
              type: string
              example: "Dummy Description"
            thumbnail_url:
              type: string
              example: "http://34.126.104.103:8080/images/IMG_4977.jpg"
            display_priority:
              type: integer
              example: 3
            product_details:
              type: array
              items:
                type: object
                properties:
                  quantity:
                    type: integer
                  available_units:
                    type: integer
                    example: 1
                  measuring_units:
                    type: string
                    example: grams
                  listing_price:
                    type: number
                  sale_price:
                    type: number
                  discount:
                    type: number
                    example: 0.00
            category_ids:
              type: array
              items:
                type: integer
              example: [2, 4, 6]
    xml:
      name: "ListProductResponse"
  SearchProductResponse:
    type: object
    properties:
      is_error:
        type: boolean
      status_code:
        type: integer
      display_msg:
        type: string
      res_data:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              example: "Dummy product"
            description:
              type: string
              example: "Dummy Description"
            thumbnail_url:
              type: string
              example: "http://34.126.104.103:8080/images/IMG_4977.jpg"
            display_priority:
              type: integer
              example: 3
            product_details:
              type: array
              items:
                type: object
                properties:
                  quantity:
                    type: integer
                  available_units:
                    type: integer
                    example: 1
                  measuring_units:
                    type: string
                    example: grams
                  listing_price:
                    type: number
                  sale_price:
                    type: number
                  discount:
                    type: number
                    example: 0.00
            category_ids:
              type: array
              items:
                type: integer
              example: [2, 4, 6]
    xml:
      name: "SearchProductResponse"
  GetProductResponse:
    type: object
    properties:
      is_error:
        type: boolean
      status_code:
        type: integer
      display_msg:
        type: string
      res_data:
        type: object
        properties:
          name:
            type: string
            example: "Dummy product"
          description:
            type: string
            example: "Dummy Description"
          thumbnail_url:
            type: string
            example: "http://34.126.104.103:8080/images/IMG_4977.jpg"
          display_priority:
            type: integer
            example: 3
          product_details:
            type: array
            items:
              type: object
              properties:
                quantity:
                  type: integer
                available_units:
                  type: integer
                  example: 1
                measuring_units:
                  type: string
                  example: grams
                listing_price:
                  type: number
                sale_price:
                  type: number
                discount:
                  type: number
                  example: 0.00
          category_ids:
            type: array
            items:
              type: integer
            example: [2, 4, 6]
    xml:
      name: "GetProductResponse"